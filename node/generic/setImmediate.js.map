{"version":3,"file":"setImmediate.js","sourceRoot":"","sources":["../../../src/generic/setImmediate.ts"],"names":[],"mappings":";AAAA,yCAAoC;AAEpC;;GAEG;AACH,IAAI,eAAsC,CAAC;AAC3C,IAAI,OAAM,CAAC,YAAY,CAAC,KAAK,WAAW,EAAE;IACxC,eAAe,GAAG,YAAY,CAAC;CAChC;KAAM;IACL,IAAM,QAAM,GAAG,gBAAM,CAAC;IACtB,IAAM,UAAQ,GAAmB,EAAE,CAAC;IACpC,IAAM,aAAW,GAAG,sBAAsB,CAAC;IAC3C,IAAM,iBAAiB,GAAG;QACxB,IAAI,OAAO,QAAM,CAAC,aAAa,KAAK,WAAW,IAAI,CAAC,QAAM,CAAC,WAAW,EAAE;YACtE,OAAO,KAAK,CAAC;SACd;QACD,IAAI,kBAAkB,GAAG,IAAI,CAAC;QAC9B,IAAM,YAAY,GAAG,QAAM,CAAC,SAAS,CAAC;QACtC,QAAM,CAAC,SAAS,GAAG;YACjB,kBAAkB,GAAG,KAAK,CAAC;QAC7B,CAAC,CAAC;QACF,QAAM,CAAC,WAAW,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;QAC5B,QAAM,CAAC,SAAS,GAAG,YAAY,CAAC;QAChC,OAAO,kBAAkB,CAAC;IAC5B,CAAC,CAAC;IACF,IAAI,iBAAiB,EAAE,EAAE;QACvB,eAAe,GAAG,UAAS,EAAc;YACvC,UAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAClB,QAAM,CAAC,WAAW,CAAC,aAAW,EAAE,GAAG,CAAC,CAAC;QACvC,CAAC,CAAC;QACF,IAAM,aAAa,GAAG,UAAS,KAAmB;YAChD,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,IAAI,KAAK,CAAC,IAAI,KAAK,aAAW,EAAE;gBACvD,IAAI,KAAK,CAAC,eAAe,EAAE;oBACzB,KAAK,CAAC,eAAe,EAAE,CAAC;iBACzB;qBAAM;oBACL,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC;iBAC3B;gBACD,IAAI,UAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;oBACvB,IAAM,EAAE,GAAG,UAAQ,CAAC,KAAK,EAAG,CAAC;oBAC7B,OAAO,EAAE,EAAE,CAAC;iBACb;aACF;QACH,CAAC,CAAC;QACF,IAAI,QAAM,CAAC,gBAAgB,EAAE;YAC3B,QAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC;SACzD;aAAM;YACL,QAAM,CAAC,WAAW,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;SAChD;KACF;SAAM,IAAI,QAAM,CAAC,cAAc,EAAE;QAChC,2BAA2B;QAC3B,IAAM,SAAO,GAAG,IAAI,QAAM,CAAC,cAAc,EAAE,CAAC;QAC5C,SAAO,CAAC,KAAK,CAAC,SAAS,GAAG,UAAC,KAAU;YACnC,IAAI,UAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,OAAO,UAAQ,CAAC,KAAK,EAAG,EAAE,CAAC;aAC5B;QACH,CAAC,CAAC;QACF,eAAe,GAAG,UAAC,EAAc;YAC/B,UAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAClB,SAAO,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAChC,CAAC,CAAC;KACH;SAAM;QACL,eAAe,GAAG,UAAS,EAAc;YACvC,OAAO,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC;KACH;CACF;AAED,kBAAe,eAAe,CAAC","sourcesContent":["import global from '../core/global';\n\n/**\n * @hidden\n */\nlet bfsSetImmediate: (cb: Function) => any;\nif (typeof(setImmediate) !== \"undefined\") {\n  bfsSetImmediate = setImmediate;\n} else {\n  const gScope = global;\n  const timeouts: (() => void)[] = [];\n  const messageName = \"zero-timeout-message\";\n  const canUsePostMessage = function() {\n    if (typeof gScope.importScripts !== 'undefined' || !gScope.postMessage) {\n      return false;\n    }\n    let postMessageIsAsync = true;\n    const oldOnMessage = gScope.onmessage;\n    gScope.onmessage = function() {\n      postMessageIsAsync = false;\n    };\n    gScope.postMessage('', '*');\n    gScope.onmessage = oldOnMessage;\n    return postMessageIsAsync;\n  };\n  if (canUsePostMessage()) {\n    bfsSetImmediate = function(fn: () => void) {\n      timeouts.push(fn);\n      gScope.postMessage(messageName, \"*\");\n    };\n    const handleMessage = function(event: MessageEvent) {\n      if (event.source === self && event.data === messageName) {\n        if (event.stopPropagation) {\n          event.stopPropagation();\n        } else {\n          event.cancelBubble = true;\n        }\n        if (timeouts.length > 0) {\n          const fn = timeouts.shift()!;\n          return fn();\n        }\n      }\n    };\n    if (gScope.addEventListener) {\n      gScope.addEventListener('message', handleMessage, true);\n    } else {\n      gScope.attachEvent('onmessage', handleMessage);\n    }\n  } else if (gScope.MessageChannel) {\n    // WebWorker MessageChannel\n    const channel = new gScope.MessageChannel();\n    channel.port1.onmessage = (event: any) => {\n      if (timeouts.length > 0) {\n        return timeouts.shift()!();\n      }\n    };\n    bfsSetImmediate = (fn: () => void) => {\n      timeouts.push(fn);\n      channel.port2.postMessage('');\n    };\n  } else {\n    bfsSetImmediate = function(fn: () => void) {\n      return setTimeout(fn, 0);\n    };\n  }\n}\n\nexport default bfsSetImmediate;\n"]}